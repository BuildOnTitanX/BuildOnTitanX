---
// NewsList.astro

import LinkComponent from '@components/LinkComponent.astro';
import { Icon } from 'astro-icon/components'

const { items } = Astro.props;

function badgeClass(type) {
  switch (type.toLowerCase()) {
    case "news": return "bg-blue-500/10 text-blue-400 border border-blue-500/20";
    case "info": return "bg-amber-500/10 text-amber-400 border border-amber-500/20";
    case "event": return "bg-emerald-500/10 text-emerald-400 border border-emerald-500/20";
    default: return "bg-gray-500/10 text-gray-400 border border-gray-500/20";
  }
}

function typeText(type) {
  switch (type.toLowerCase()) {
    case "news": return "text-blue-400 drop-shadow-[0_2px_4px_rgba(0,0,0,0.6)]";
    case "info": return "text-amber-400 drop-shadow-[0_2px_4px_rgba(0,0,0,0.6)]";
    case "event": return "text-emerald-400 drop-shadow-[0_2px_4px_rgba(0,0,0,0.6)]";
    default: return "text-gray-400 drop-shadow-[0_2px_4px_rgba(0,0,0,0.6)]";
  }
}

function iconForType(type: string) {
  switch (type.toLowerCase()) {
    case 'news':
      return 'lucide:megaphone'; // or 'lucide:radio' â€” both good for news
    case 'info':
      return 'lucide:info';
    case 'event':
      return 'lucide:calendar-days'; // or 'lucide:calendar'
    default:
      return 'lucide:file-text';
  }
}

function formatDate(dateString) {
  const date = new Date(dateString);
  // return date.toLocaleDateString("en-GB", {
  return date.toLocaleDateString("en-US", {
    day: "2-digit",
    // month: "short",
    month: "long",
    year: "numeric",
  });
}

---
<section class="py-8 newsList space-y-8 max-w-5xl mx-auto px-4 sm:px-6 lg:px-8">
  {items
    .sort((a, b) => new Date(b.date) - new Date(a.date)) // newest first
    .map((item) => {
      const isUpcoming = new Date(item.date) > new Date(); // future date

      return (
      <article class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6 sm:gap-8 pb-10 border-b border-black/20 dark:border-white/20 items-center">
        <div
          class={
            "col-span-1 flex justify-center items-center rounded-xl newsCard relative type_" +
            item.type.toLowerCase()
          }
        >
          <div class={`flex items-center gap-3 z-20 ${typeText(item.type)}`}>
            <Icon
              name={iconForType(item.type)}
              class="icon w-10 h-10"
              aria-hidden="true"
            />
            <span class="text-xl font-semibold tracking-wide">{item.type}</span>
          </div>

          {item.image && (
            <img
              src={item.image}
              alt={item.title}
              class="rounded-xl w-full h-full absolute z-10 object-cover"
            />
          )}

          {isUpcoming && (
            <span class="hidden sm:block absolute top-3 right-3 bg-emerald-500 text-black text-xs font-semibold px-2 py-1 rounded-md shadow-md z-30 border border-emerald-500/20">
              Upcoming
            </span>
          )}
        </div>

        <div class="col-span-1 sm:col-span-1 lg:col-span-3 flex flex-col lg:flex-row justify-between items-start lg:items-center gap-4">
          <div class="flex-1">
            <h3 class="text-xl sm:text-2xl font-semibold leading-tight mt-0!">
              {item.title}
            </h3>
            <p class="text-sm sm:text-base mt-1">{item.description}</p>
            <div class="flex items-center gap-4 mt-3">
              <span class="text-sm text-gray-400">{formatDate(item.date)}</span>
              {item.link && (
                <LinkComponent
                  href={item.link}
                  class="text-sm text-lime-400 font-medium hover:underline"
                >
                  {item.linktext ? item.linktext : 'Read more'}
                </LinkComponent>
              )}
              {item.link2 && (
                <LinkComponent
                  href={item.link2}
                  class="text-sm text-lime-400 font-medium hover:underline"
                >
                  {item.link2text ? item.link2text : 'More details'}
                </LinkComponent>
              )}
            </div>
          </div>

          <div class="flex flex-col gap-2 self-end lg:self-start">
            {isUpcoming && (
              <span class="ml-0 lg:ml-6 px-3 py-1 text-sm font-semibold rounded-full whitespace-nowrap self-end text-black bg-emerald-400 border border-emerald-500/20">
                Upcoming
              </span>
            )}
            <span
              class={`ml-0 lg:ml-6 px-3 py-1 text-sm font-semibold rounded-full whitespace-nowrap self-end ${badgeClass(
                item.type
              )}`}
            >
              {item.type}
            </span>
          </div>
        </div>
      </article>
  );
})}
</div>

<style lang="scss" is:global>
  .newsList {
    /* type variants */
    .type_news {
      background: linear-gradient(135deg, rgba(255,255,255,0.08), #4aa0ff);
    }

    .type_info {
      background: linear-gradient(135deg, rgba(255,255,255,0.08), oklch(76.9% 0.188 70.08));
    }

    .type_event {
      background: linear-gradient(135deg,rgba(255,255,255,0.08), var(--color-emerald-400));
    }

    .newsCard {
      height: 140%;
    }

    /* subtle decorative overlay to echo inspiration image */
    .newsCard::after{
      content:"";
      position:absolute;
      inset:0;
      background:radial-gradient(circle at 20% 20%, rgba(255,255,255,0.06), transparent 20%),
                  linear-gradient(180deg, rgba(255,255,255,0.02), rgba(0,0,0,0.02));
      pointer-events:none;
    }
  }
</style>
