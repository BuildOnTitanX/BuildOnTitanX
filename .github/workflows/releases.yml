name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Skip if changelog not updated
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -n "$LAST_TAG" ]; then
            if git diff --quiet "$LAST_TAG"..HEAD -- CHANGELOG.md; then
              echo "No CHANGELOG.md update since $LAST_TAG. Skipping release."
              exit 0
            fi
          fi

      - name: Extract version and changelog notes
        id: changelog
        run: |
          VERSION=$(grep -m1 '^## \[[0-9]' CHANGELOG.md | sed -E 's/^## \[([0-9]+\.[0-9]+\.[0-9]+)\].*/\1/')

          if [ -z "$VERSION" ]; then
            echo "❌ No version found in CHANGELOG.md"
            exit 1
          fi

          NOTES=$(awk "/## \\[$VERSION\\]/ {flag=1; next} /^## \\[/ {flag=0} flag" CHANGELOG.md)

          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "$NOTES" > release_notes.md

      - name: Create Git tag with date fallback
        env:
          VERSION: ${{ env.VERSION }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          TAG="v$VERSION"
          DATE_SUFFIX=$(date +%Y%m%d%H%M%S)

          if git ls-remote --tags origin "$TAG" | grep -q "$TAG"; then
            echo "Tag $TAG already exists. Creating new tag with date suffix."
            TAG="${TAG}-${DATE_SUFFIX}"
          fi

          git tag "$TAG"
          git push origin "$TAG"

          echo "TAG=$TAG" >> "$GITHUB_ENV"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          name: ${{ env.TAG }}
          body_path: release_notes.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
